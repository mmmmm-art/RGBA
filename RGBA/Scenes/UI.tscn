[gd_scene load_steps=10 format=2]

[ext_resource path="res://Scripts/UI.gd" type="Script" id=1]
[ext_resource path="res://Fonts/data-latin.ttf" type="DynamicFontData" id=2]

[sub_resource type="DynamicFont" id=2]
font_data = ExtResource( 2 )

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

const float PI = 3.1415926535;

uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, vec4(rainbow, color.a), strength);
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/strength = 1.0
shader_param/speed = 0.3
shader_param/angle = 135.0

[sub_resource type="DynamicFont" id=7]
size = 130
outline_size = 1
font_data = ExtResource( 2 )

[sub_resource type="Environment" id=1]
background_mode = 4
background_energy = 5.09
background_canvas_max_layer = 100
glow_enabled = true
glow_bloom = 0.25
glow_blend_mode = 0
glow_bicubic_upscale = true
glow_high_quality = true
adjustment_enabled = true
adjustment_saturation = 1.62

[sub_resource type="Animation" id=3]
resource_name = "Game_Over"
length = 4.5
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/ColorRect2:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/ColorRect2/Label:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/ColorRect2/Label:percent_visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 2, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CanvasLayer/ColorRect2/Label:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 0.988235, 0.988235, 0.988235, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("CanvasLayer/ColorRect2/Label:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 2, 4.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ false, true, false ]
}
tracks/5/type = "method"
tracks/5/path = NodePath(".")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 4 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "reset"
} ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("CanvasLayer/ColorRect2:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 4.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="Animation" id=4]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/ColorRect2:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/ColorRect2/Label:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/ColorRect2/Label:percent_visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CanvasLayer/ColorRect2/Label:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("CanvasLayer/ColorRect2/Label:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}

[node name="UI" type="Node2D"]
script = ExtResource( 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]
follow_viewport_scale = 2.0

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
self_modulate = Color( 1.7, 1.7, 1.7, 1 )
margin_right = 584.0
margin_bottom = 96.0
color = Color( 0.282353, 0.254902, 0.254902, 0.145098 )

[node name="RedL" type="Label" parent="CanvasLayer"]
self_modulate = Color( 1.7, 1.7, 1.7, 1 )
margin_right = 100.0
margin_bottom = 25.0
custom_fonts/font = SubResource( 2 )
text = "Red: 255"
valign = 1

[node name="GreenL" type="Label" parent="CanvasLayer"]
self_modulate = Color( 1.7, 1.7, 1.7, 1 )
margin_top = 24.0
margin_right = 100.0
margin_bottom = 49.0
custom_fonts/font = SubResource( 2 )
text = "Green: 255"
valign = 1

[node name="BlueL" type="Label" parent="CanvasLayer"]
self_modulate = Color( 1.7, 1.7, 1.7, 1 )
margin_top = 48.0
margin_right = 100.0
margin_bottom = 73.0
custom_fonts/font = SubResource( 2 )
text = "Blue: 255"
valign = 1

[node name="AlphaL" type="Label" parent="CanvasLayer"]
self_modulate = Color( 1.7, 1.7, 1.7, 1 )
margin_top = 72.0
margin_right = 100.0
margin_bottom = 96.0
custom_fonts/font = SubResource( 2 )
text = "Alpha: 255"
valign = 1

[node name="Red" type="HSlider" parent="CanvasLayer"]
modulate = Color( 1, 0, 0, 1 )
self_modulate = Color( 1.7, 1.7, 1.7, 1 )
margin_left = 80.0
margin_right = 580.0
margin_bottom = 25.0
max_value = 255.0
value = 255.0

[node name="Green" type="HSlider" parent="CanvasLayer"]
modulate = Color( 0.172549, 1, 0, 1 )
self_modulate = Color( 1.7, 1.7, 1.7, 1 )
margin_left = 80.0
margin_top = 24.0
margin_right = 580.0
margin_bottom = 49.0
max_value = 255.0
value = 255.0

[node name="Blue" type="HSlider" parent="CanvasLayer"]
modulate = Color( 0, 0.811765, 1, 1 )
self_modulate = Color( 1.7, 1.7, 1.7, 1 )
margin_left = 80.0
margin_top = 48.0
margin_right = 580.0
margin_bottom = 73.0
max_value = 255.0
value = 255.0

[node name="Alpha" type="HSlider" parent="CanvasLayer"]
self_modulate = Color( 1.7, 1.7, 1.7, 1 )
margin_left = 80.0
margin_top = 72.0
margin_right = 580.0
margin_bottom = 97.0
max_value = 255.0
value = 255.0

[node name="ColorRect2" type="ColorRect" parent="CanvasLayer"]
self_modulate = Color( 0, 0, 0, 0 )
margin_right = 1440.0
margin_bottom = 900.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )

[node name="Label" type="Label" parent="CanvasLayer/ColorRect2"]
modulate = Color( 1, 1, 1, 0 )
material = SubResource( 9 )
margin_left = 400.0
margin_top = 250.0
margin_right = 1040.0
margin_bottom = 472.0
custom_fonts/font = SubResource( 7 )
text = "GAME OVER"
align = 1
valign = 1

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Game_Over = SubResource( 3 )
anims/RESET = SubResource( 4 )

[connection signal="value_changed" from="CanvasLayer/Red" to="." method="_on_Red_value_changed"]
[connection signal="value_changed" from="CanvasLayer/Green" to="." method="_on_Green_value_changed"]
[connection signal="value_changed" from="CanvasLayer/Blue" to="." method="_on_Blue_value_changed"]
[connection signal="value_changed" from="CanvasLayer/Alpha" to="." method="_on_Alpha_value_changed"]
